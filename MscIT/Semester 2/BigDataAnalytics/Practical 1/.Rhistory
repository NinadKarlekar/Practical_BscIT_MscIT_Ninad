# K-Means Clustering
# Importing the dataset
dataset <- read.csv('D:\\nk\\Mall_Customers.csv')
# K-Means Clustering
# Importing the dataset
dataset <- read.csv('F:\\GitHub\\Practical_BscIT_MscIT_Ninad\\MscIT\\Semester 2\\BigDataAnalytics\\Dataset\\Mall_Customers.csv')
head(dataset)
dataset <- dataset[4:5]
head(dataset)
# K-Means Clustering
# Importing the dataset
dataset <- read.csv('F:\\GitHub\\Practical_BscIT_MscIT_Ninad\\MscIT\\Semester 2\\BigDataAnalytics\\Dataset\\Mall_Customers.csv')
head(dataset)
dataset <- dataset[4:5]
head(dataset)
# Importing the dataset
dataset <- read.csv('F:\\GitHub\\Practical_BscIT_MscIT_Ninad\\MscIT\\Semester 2\\BigDataAnalytics\\Dataset\\Mall_Customers.csv')
head(dataset)
dataset <- dataset[4:5]
head(dataset)
# Compute the Within Cluster Sum of Squares (WCSS) for different number of clusters
wcss <- vector()
for (i in 1:10) {
wcss[i] <- sum(kmeans(dataset, i)$withinss)
}
# Plot the WCSS values
plot(1:10, wcss, type = 'b', main = paste('The Elbow Method'),
xlab = 'Number of clusters', ylab = 'WSS')
# Importing the dataset
dataset <- read.csv('F:\\GitHub\\Practical_BscIT_MscIT_Ninad\\MscIT\\Semester 2\\BigDataAnalytics\\Dataset\\Mall_Customers.csv')
head(dataset)
dataset <- dataset[4:5]
head(dataset)
# Compute the Within Cluster Sum of Squares (WCSS) for different number of clusters
wcss <- vector()
for (i in 1:10) {
wcss[i] <- sum(kmeans(dataset, i)$withinss)
}
# Plot the WCSS values
plot(1:10, wcss, type = 'b', main = paste('The Elbow Method'),
xlab = 'Number of clusters', ylab = 'WSS')
# Importing the dataset
dataset <- read.csv('F:\\GitHub\\Practical_BscIT_MscIT_Ninad\\MscIT\\Semester 2\\BigDataAnalytics\\Dataset\\Mall_Customers.csv')
head(dataset)
dataset <- dataset[4:5]
head(dataset)
# Compute the Within Cluster Sum of Squares (WCSS) for different number of clusters
wcss <- vector()
for (i in 1:10) {
wcss[i] <- sum(kmeans(dataset, i)$withinss)
}
# Plot the WCSS values
plot(1:10, wcss, type = 'b', main = paste('The Elbow Method'),
xlab = 'Number of clusters', ylab = 'WSS')
# Importing the dataset
dataset <- read.csv('F:\\GitHub\\Practical_BscIT_MscIT_Ninad\\MscIT\\Semester 2\\BigDataAnalytics\\Dataset\\Mall_Customers.csv')
head(dataset)
dataset <- dataset[4:5]
head(dataset)
# Compute the Within Cluster Sum of Squares (WCSS) for different number of clusters
wcss <- vector()
for (i in 1:10) {
wcss[i] <- sum(kmeans(dataset, i)$withinss)
}
# Plot the WCSS values
plot(1:10, wcss, type = 'b', main = paste('The Elbow Method'),
xlab = 'Number of clusters', ylab = 'WSS')
# Fit K-Means to the dataset with 5 clusters
kmeans_model <- kmeans(x = dataset, centers = 5)
y_kmeans <- kmeans_model$cluster
# Visualize the clusters
library("cluster")
clusplot(dataset, y_kmeans, lines = 0, shade = TRUE, color = TRUE, labels = 2,
main = paste('Clusters of customers'),
xlab = "Annual Income",
ylab = "Spending Score")
library(arules)
library(arulesViz)
library(RColorBrewer)
data(Groceries)
Groceries
summary(Groceries)
data(Groceries)
Groceries
summary(Groceries)
class(Groceries)
# using apriori() function
rules = apriori(Groceries, parameter = list(supp = 0.02, conf = 0.2))
summary (rules)
# using inspect() function
inspect(rules[1:10])
# using itemFrequencyPlot() function
arules::itemFrequencyPlot(Groceries, topN = 20,
col = brewer.pal(8, 'Pastel2'),
main = 'Relative Item Frequency Plot',
type = "relative",
ylab = "Item Frequency (Relative)")
itemsets = apriori(Groceries, parameter = list(minlen=2, maxlen=2,support=0.02, target="frequent itemsets"))
summary(itemsets)
# using inspect() function
inspect(itemsets[1:10])
itemsets_3 = apriori(Groceries, parameter = list(minlen=3, maxlen=3,support=0.02, target="frequent itemsets"))
summary(itemsets_3)
# using inspect() function
inspect(itemsets_3)
